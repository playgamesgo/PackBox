import org.graalvm.buildtools.gradle.dsl.NativeImageOptions

plugins {
    id "java"
    id "org.graalvm.buildtools.native" version "0.9.27"
    id 'com.gradleup.shadow' version '8.3.4'
}

group = "me.playgamesgo.packbox"
version = "0.0.0"

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.eclipse.jgit:org.eclipse.jgit:7.2.0.202503040940-r"
    annotationProcessor "info.picocli:picocli-codegen:4.7.6"

    implementation "info.picocli:picocli:4.7.6"
    implementation "com.google.code.gson:gson:2.12.1"
    implementation "org.jline:jline-terminal:3.29.0"
    implementation "org.jline:jline-console-ui:3.29.0"
    implementation "org.jline:jline-terminal-jni:3.29.0"

    compileOnly "org.jetbrains:annotations:26.0.2"

    compileOnly "org.projectlombok:lombok:1.18.34"
    annotationProcessor "org.projectlombok:lombok:1.18.34"
}


compileJava {
    options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
}

jar {
    manifest {
        attributes(
                "Main-Class": "me.playgamesgo.packbox.Main"
        )
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21) // Use the Java version you're targeting
    }
}

tasks.register('generateGraalConfig', JavaExec) {
    group = 'GraalVM'
    description = 'Generates GraalVM configuration files by running the application with tracing agent'

    mainClass = 'me.playgamesgo.packbox.Main'
    classpath = sourceSets.main.runtimeClasspath

    jvmArgs = [
        '-agentlib:native-image-agent=config-output-dir=src/main/resources/META-INF/native-image'
    ]

    doFirst {
        mkdir 'src/main/resources/META-INF/native-image'
    }
}

graalvmNative {
    toolchainDetection = false
    binaries {
        main {
            javaLauncher = javaToolchains.launcherFor {
                languageVersion = JavaLanguageVersion.of(21)
                vendor = JvmVendorSpec.matching("GraalVM Community")
            }
            imageName = 'packbox'
            mainClass = 'me.playgamesgo.packbox.Main'
            buildArgs.add('--no-fallback')
            configurationFileDirectories.from(file('src/main/resources/META-INF/native-image'))
        }
    }
}